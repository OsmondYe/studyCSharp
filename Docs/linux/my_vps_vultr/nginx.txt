A high performance web server and a reverse proxy server



# http服务器本身自己一台机器处理上万个页面,开销太大,天然有需求把一些页面的处理委托给其他机器,或者其他进程来做
	# 反向代理存在的意义
	# http 交给 PHP python去处理也行

# TLS工作在传输层,http在应用层,其受到的数据已经是明文了


# http2  h/2{
	http2.0 
	RFC 7540
	相比http1.1 methods, status_codes, header_fields, URIs都是一样的
	速度快了
}



#
#Reverse Proxy
#

# 正向代理隐藏客户端, 反向代理隐藏服务器

# pass a request from Nginx to proxied server over different protocls
	# proxying 把收到的流量分发给具体干活的
	# proxied server 代理服务器, 这就是具体干活的

# modify client request header
# config buffering of response coming from proxied server


