# hatching 孵化
	-所有东西都是从简单逐渐打磨到成型的
	-并非创造,而是从先有的基础上进行拓展
# pull&push model
# 坚持模式思维,7个习惯
	-1 经常反思
		- 我构建的系统,我使用的技巧,哪里有更新点,缺陷在哪里
		- 如何将积累记录下来
	-2 坚持使用同一套结构
		- 有了原材料,如何把模型用简洁的代码给表示出来
		- 模式是某种场合下针对某个问题的一个解决方案的一种结构化展现
	-3 尽早且频繁的涉及具体问题
		- 寻找到具体问题后,然后再理解模式抽象的定义
	-4 保持模式间区别和互补性
	-5 有效呈现
		- 编码和写作风格
	-6 不懈的重复
	-7 收集并吸收反馈

# 23个设计模式到底各自是干什么的
	# adapter	改变对象的接口
	# bridge	改变对象的实现
	# composite	改变对象结构和组成
	# decorator	改变职责无需派生子类
	# facade	改变子系统接口
	# flyweight	改变对象存储开销
	# proxy		改变访问对象	|| 改变对象的位置  


# New	Creational
# Organize Structral
	# proxy
		web浏览器给图片一个占位符,然后延迟加载
		引用一个对象,但需要更加丰富的功能,远比直接给一个指针来得复杂时
		protection proxy
# Doing Behavioral
	# visitor
		一个用来处理对象结构中各个元素的操作,Vistor使得无需修改要出来的类就可以定义新操作
		被访问的类层次是否稳定
		文件系统的Node体系新增Visitor, 然后 cat,ls 就可以实作每一个具体的需求扩展了